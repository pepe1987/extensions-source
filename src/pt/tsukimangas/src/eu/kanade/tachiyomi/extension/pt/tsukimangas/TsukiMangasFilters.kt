package eu.kanade.tachiyomi.extension.pt.tsukimangas

import eu.kanade.tachiyomi.source.model.Filter
import eu.kanade.tachiyomi.source.model.FilterList

object TsukiMangasFilters {
    open class CheckBoxFilterList(name: String, val pairs: Array<Pair<String, String>>) :
        Filter.Group<Filter.CheckBox>(name, pairs.map { CheckBoxVal(it.first) })

    private class CheckBoxVal(name: String) : Filter.CheckBox(name, false)

    private inline fun <reified R> FilterList.parseCheckbox(
        options: Array<Pair<String, String>>,
    ): Sequence<String> {
        return (first { it is R } as CheckBoxFilterList).state
            .asSequence()
            .filter { it.state }
            .map { checkbox -> options.find { it.first == checkbox.name }!!.second }
    }

    open class SelectFilter(
        displayName: String,
        val vals: Array<Pair<String, String>>,
    ) : Filter.Select<String>(
        displayName,
        vals.map { it.first }.toTypedArray(),
    ) {
        val selected get() = vals[state].second
    }

    private inline fun <reified R> FilterList.getSelected(): String {
        return (first { it is R } as SelectFilter).selected
    }

    internal class GenresFilter : CheckBoxFilterList("Gêneros", GENRES)
    internal class TagsFilter : CheckBoxFilterList("Tags", TAGS)

    internal class FormatFilter : SelectFilter("Formato", FORMATS)
    internal class AdultFilter : SelectFilter("Mostrar conteúdo adulto", ADULT_OPTIONS)
    internal class ContentFilter : SelectFilter("Filtro", CONTENT_FILTER)
    internal class StatusFilter : SelectFilter("Status", STATUS)

    internal val FILTER_LIST get() = FilterList(
        GenresFilter(),
        TagsFilter(),

        FormatFilter(),
        AdultFilter(),
        ContentFilter(),
        StatusFilter(),
    )

    internal data class FilterSearchParams(
        val genres: Sequence<String> = emptySequence(),
        val tags: Sequence<String> = emptySequence(),

        val format: String = "",
        val adult: String = "",
        val filter: String = "",
        val status: String = "",
    )

    internal fun getSearchParameters(filters: FilterList): FilterSearchParams {
        if (filters.isEmpty()) return FilterSearchParams()

        return FilterSearchParams(
            filters.parseCheckbox<GenresFilter>(GENRES),
            filters.parseCheckbox<TagsFilter>(TAGS),

            filters.getSelected<FormatFilter>(),
            filters.getSelected<AdultFilter>(),
            filters.getSelected<ContentFilter>(),
            filters.getSelected<StatusFilter>(),
        )
    }

    private val GENRES = arrayOf(
        "4-Koma",
        "Adaptação",
        "Aliens",
        "Animais",
        "Antologia",
        "Artes Marciais",
        "Aventura",
        "Ação",
        "Colorido por fã",
        "Comédia",
        "Criado pelo Usuário",
        "Crime",
        "Cross-dressing",
        "Deliquentes",
        "Demônios",
        "Doujinshi",
        "Drama",
        "Ecchi",
        "Esportes",
        "Fantasia",
        "Fantasmas",
        "Filosófico",
        "Gals",
        "Ganhador de Prêmio",
        "Garotas Monstro",
        "Garotas Mágicas",
        "Gastronomia",
        "Gore",
        "Harém",
        "Harém Reverso",
        "Hentai",
        "Histórico",
        "Horror",
        "Incesto",
        "Isekai",
        "Jogos Tradicionais",
        "Lolis",
        "Long Strip",
        "Mafia",
        "Magia",
        "Mecha",
        "Medicina",
        "Militar",
        "Mistério",
        "Monstros",
        "Música",
        "Ninjas",
        "Obscenidade",
        "Oficialmente Colorido",
        "One-shot",
        "Policial",
        "Psicológico",
        "Pós-apocalíptico",
        "Realidade Virtual",
        "Reencarnação",
        "Romance",
        "Samurais",
        "Sci-Fi",
        "Shotas",
        "Shoujo Ai",
        "Shounen Ai",
        "Slice of Life",
        "Sobrenatural",
        "Sobrevivência",
        "Super Herói",
        "Thriller",
        "Todo Colorido",
        "Trabalho de Escritório",
        "Tragédia",
        "Troca de Gênero",
        "Vampiros",
        "Viagem no Tempo",
        "Vida Escolar",
        "Violência Sexual",
        "Vídeo Games",
        "Webcomic",
        "Wuxia",
        "Yaoi",
        "Yuri",
        "Zumbis",
    ).map { Pair(it, it) }.toTypedArray()

    private val TAGS = arrayOf(
        Pair("4-Koma", "4-Koma"),
        Pair("Acromático", "Achromatic"),
        Pair("Adoção", "Adoption"),
        Pair("Agricultura", "Agriculture"),
        Pair("Airsoft", "Airsoft"),
        Pair("Alienígenas", "Aliens"),
        Pair("Alquimia", "Alchemy"),
        Pair("Amadurecimento", "Coming Of Age"),
        Pair("Ambiental", "Environmental"),
        Pair("Amnésia", "Amnesia"),
        Pair("Amor entre Adolescentes", "Teens' Love"),
        Pair("Amor entre Homens", "Boys' Love"),
        Pair("Anacronismo", "Anachronism"),
        Pair("Animais", "Animals"),
        Pair("Anjos", "Angels"),
        Pair("Anti-Herói", "Anti-Hero"),
        Pair("Antologia", "Anthology"),
        Pair("Antropomorfismo", "Anthropomorphism"),
        Pair("Anúncio Publicitário", "Advertisement"),
        Pair("Ao Ar Livre", "Outdoor"),
        Pair("Arco e Flecha", "Archery"),
        Pair("Armas", "Guns"),
        Pair("Artes Marciais", "Martial Arts"),
        Pair("Assassinos", "Assassins"),
        Pair("Assexual", "Asexual"),
        Pair("Astronomia", "Astronomy"),
        Pair("Atletismo", "Athletics"),
        Pair("Atuação", "Acting"),
        Pair("Autobiográfico", "Autobiographical"),
        Pair("Aviação", "Aviation"),
        Pair("Badminton", "Badminton"),
        Pair("Banda", "Band"),
        Pair("Bar", "Bar"),
        Pair("Barreira de Idioma Estrangeiro", "Foreign Language Barrier"),
        Pair("Basquete", "Basketball"),
        Pair("Batalha Real", "Battle Royale"),
        Pair("Batalha de Cartas", "Card Battle"),
        Pair("Beisebol", "Baseball"),
        Pair("Biográfico", "Biographical"),
        Pair("Bissexual", "Bisexual"),
        Pair("Bombeiros", "Firefighters"),
        Pair("Boxe", "Boxing"),
        Pair("Bruxa", "Witch"),
        Pair("Bullying", "Bullying"),
        Pair("CGI Completo", "Full CGI"),
        Pair("CGI", "CGI"),
        Pair("Caligrafia", "Calligraphy"),
        Pair("Canibalismo", "Cannibalism"),
        Pair("Carros", "Cars"),
        Pair("Casamento", "Marriage"),
        Pair("Centauro", "Centaur"),
        Pair("Chibi", "Chibi"),
        Pair("Chuunibyou", "Chuunibyou"),
        Pair("Ciborgue", "Cyborg"),
        Pair("Ciclismo", "Cycling"),
        Pair("Ciclomotores", "Mopeds"),
        Pair("Circo", "Circus"),
        Pair("Civilização Perdida", "Lost Civilization"),
        Pair("Clone", "Clone"),
        Pair("Clube Escolar", "School Club"),
        Pair("Comida", "Food"),
        Pair("Comédia Surrealista", "Surreal Comedy"),
        Pair("Conspiração", "Conspiracy"),
        Pair("Conto de Fadas", "Fairy Tale"),
        Pair("Cor Completa", "Full Color"),
        Pair("Cosplay", "Cosplay"),
        Pair("Crime", "Crime"),
        Pair("Crossover", "Crossover"),
        Pair("Cultivo", "Cultivation"),
        Pair("Culto", "Cult"),
        Pair("Cultura Otaku", "Otaku Culture"),
        Pair("Cyberpunk", "Cyberpunk"),
        Pair("Dança", "Dancing"),
        Pair("Deficiência", "Disability"),
        Pair("Delinquentes", "Delinquents"),
        Pair("Demônios", "Demons"),
        Pair("Denpa", "Denpa"),
        Pair("Desenho", "Drawing"),
        Pair("Desenvolvimento de Software", "Software Development"),
        Pair("Deserto", "Desert"),
        Pair("Detetive", "Detective"),
        Pair("Deuses", "Gods"),
        Pair("Diferença de Idade", "Age Gap"),
        Pair("Dinossauros", "Dinosaurs"),
        Pair("Distópico", "Dystopian"),
        Pair("Donzela do Santuário", "Shrine Maiden"),
        Pair("Dragões", "Dragons"),
        Pair("Drogas", "Drugs"),
        Pair("Dullahan", "Dullahan"),
        Pair("E-Sports", "E-Sports"),
        Pair("Economia", "Economics"),
        Pair("Educacional", "Educational"),
        Pair("Elenco Conjunto", "Ensemble Cast"),
        Pair("Elenco Principalmente Adolescente", "Primarily Teen Cast"),
        Pair("Elenco Principalmente Adulto", "Primarily Adult Cast"),
        Pair("Elenco Principalmente Feminino", "Primarily Female Cast"),
        Pair("Elenco Principalmente Infantil", "Primarily Child Cast"),
        Pair("Elenco Principalmente Masculino", "Primarily Male Cast"),
        Pair("Elfo", "Elf"),
        Pair("Empregadas", "Maids"),
        Pair("Episódico", "Episodic"),
        Pair("Ero Guro", "Ero Guro"),
        Pair("Escola", "School"),
        Pair("Escravidão", "Slavery"),
        Pair("Escrita", "Writing"),
        Pair("Esgrima", "Fencing"),
        Pair("Espaço", "Space"),
        Pair("Espionagem", "Espionage"),
        Pair("Esqueleto", "Skeleton"),
        Pair("Faculdade", "College"),
        Pair("Fada", "Fairy"),
        Pair("Família Encontrada", "Found Family"),
        Pair("Fantasia Urbana", "Urban Fantasy"),
        Pair("Fantasma", "Ghost"),
        Pair("Filosofia", "Philosophy"),
        Pair("Fitness", "Fitness"),
        Pair("Flash", "Flash"),
        Pair("Fotografia", "Photography"),
        Pair("Freira", "Nun"),
        Pair("Fugitivo", "Fugitive"),
        Pair("Futebol Americano", "American Football"),
        Pair("Futebol", "Football"),
        Pair("Gangues", "Gangs"),
        Pair("Garota Monstro", "Monster Girl"),
        Pair("Garotas Bonitinhas Fazendo Coisas Bonitinhas", "Cute Girls Doing Cute Things"),
        Pair("Garoto Feminino", "Femboy"),
        Pair("Garoto Monstro", "Monster Boy"),
        Pair("Garotos Bonitinhos Fazendo Coisas Bonitinhas", "Cute Boys Doing Cute Things"),
        Pair("Go", "Go"),
        Pair("Goblin", "Goblin"),
        Pair("Golfe", "Golf"),
        Pair("Gore", "Gore"),
        Pair("Guerra", "War"),
        Pair("Gyaru", "Gyaru"),
        Pair("Gêmeos", "Twins"),
        Pair("Handebol", "Handball"),
        Pair("Harém Feminino", "Female Harem"),
        Pair("Harém Masculino", "Male Harem"),
        Pair("Harém com Gêneros Mistos", "Mixed Gender Harem"),
        Pair("Henshin", "Henshin"),
        Pair("Heterossexual", "Heterosexual"),
        Pair("Hikikomori", "Hikikomori"),
        Pair("Histórico", "Historical"),
        Pair("Horror Corporal", "Body Horror"),
        Pair("Horror Cósmico", "Cosmic Horror"),
        Pair("Identidades Dissociativas", "Dissociative Identities"),
        Pair("Inteligência Artificial", "Artificial Intelligence"),
        Pair("Isekai", "Isekai"),
        Pair("Iyashikei", "Iyashikei"),
        Pair("Jogo da Morte", "Death Game"),
        Pair("Jogos Eletrônicos", "Video Games"),
        Pair("Jogos de Azar", "Gambling"),
        Pair("Judô", "Judo"),
        Pair("Kaiju", "Kaiju"),
        Pair("Karuta", "Karuta"),
        Pair("Kemonomimi", "Kemonomimi"),
        Pair("Kuudere", "Kuudere"),
        Pair("Lacrosse", "Lacrosse"),
        Pair("Literatura Clássica", "Classic Literature"),
        Pair("Lobisomem", "Werewolf"),
        Pair("Luta Livre", "Wrestling"),
        Pair("Luta com Espada", "Swordplay"),
        Pair("Luta com Lança", "Spearplay"),
        Pair("Líder de Torcida", "Cheerleading"),
        Pair("Magia", "Magic"),
        Pair("Mahjong", "Mahjong"),
        Pair("Manipulação de Memória", "Memory Manipulation"),
        Pair("Manipulação do Tempo", "Time Manipulation"),
        Pair("Maquiagem", "Makeup"),
        Pair("Maria-rapaz", "Tomboy"),
        Pair("Masmorra", "Dungeon"),
        Pair("Medicina", "Medicine"),
        Pair("Mergulho", "Scuba Diving"),
        Pair("Meta", "Meta"),
        Pair("Militar", "Military"),
        Pair("Mitologia", "Mythology"),
        Pair("Moda", "Fashion"),
        Pair("Mordomo", "Butler"),
        Pair("Motocicletas", "Motorcycles"),
        Pair("Mudança de Forma", "Shapeshifting"),
        Pair("Mulher de Escritório", "Office Lady"),
        Pair("Mundo Virtual", "Virtual World"),
        Pair("Musical", "Musical"),
        Pair("Máfia", "Mafia"),
        Pair("Natação", "Swimming"),
        Pair("Navios", "Ships"),
        Pair("Necromancia", "Necromancy"),
        Pair("Nekomimi", "Nekomimi"),
        Pair("Ninja", "Ninja"),
        Pair("Noir", "Noir"),
        Pair("Nudez", "Nudity"),
        Pair("Não Ficção", "Non-Fiction"),
        Pair("Oiran", "Oiran"),
        Pair("Ojou-Sama", "Ojou-Sama"),
        Pair("Ordem Acrônica", "Achronological Order"),
        Pair("Pandemia", "Pandemic"),
        Pair("Parkour", "Parkour"),
        Pair("Paródia", "Parody"),
        Pair("Patinagem no Gelo", "Ice Skating"),
        Pair("Pele Bronzeada", "Tanned Skin"),
        Pair("Pesca", "Fishing"),
        Pair("Piratas", "Pirates"),
        Pair("Polícia", "Police"),
        Pair("Política", "Politics"),
        Pair("Ponto de Vista", "POV"),
        Pair("Prisão", "Prison"),
        Pair("Professor(a)", "Teacher"),
        Pair("Protagonista Feminina", "Female Protagonist"),
        Pair("Protagonista Masculino", "Male Protagonist"),
        Pair("Pular no Tempo", "Time Skip"),
        Pair("Puppetry", "Puppetry"),
        Pair("Pós-Apocalíptico", "Post-Apocalyptic"),
        Pair("Pós-Vida", "Afterlife"),
        Pair("Pôquer", "Poker"),
        Pair("Quimera", "Chimera"),
        Pair("Rakugo", "Rakugo"),
        Pair("Reabilitação", "Rehabilitation"),
        Pair("Realidade Aumentada", "Augmented Reality"),
        Pair("Reencarnação", "Reincarnation"),
        Pair("Regressão de Idade", "Age Regression"),
        Pair("Religião", "Religion"),
        Pair("Robô Real", "Real Robot"),
        Pair("Robôs", "Robots"),
        Pair("Rotoscopia", "Rotoscoping"),
        Pair("Rugby", "Rugby"),
        Pair("Rural", "Rural"),
        Pair("Samurai", "Samurai"),
        Pair("Sem Diálogo", "No Dialogue"),
        Pair("Sem Gênero", "Agender"),
        Pair("Sem-teto", "Homeless"),
        Pair("Sereia", "Mermaid"),
        Pair("Shogi", "Shogi"),
        Pair("Skateboarding", "Skateboarding"),
        Pair("Slapstick", "Slapstick"),
        Pair("Sobrevivência", "Survival"),
        Pair("Steampunk", "Steampunk"),
        Pair("Stop Motion", "Stop Motion"),
        Pair("Suicídio", "Suicide"),
        Pair("Sumô", "Sumo"),
        Pair("Super Robô", "Super Robot"),
        Pair("Super-herói", "Superhero"),
        Pair("Superpoder", "Super Power"),
        Pair("Surf", "Surfing"),
        Pair("Sátira", "Satire"),
        Pair("Súcubo", "Succubus"),
        Pair("Tanques", "Tanks"),
        Pair("Temas LGBTQ+", "LGBTQ+ Themes"),
        Pair("Terrorismo", "Terrorism"),
        Pair("Tokusatsu", "Tokusatsu"),
        Pair("Tortura", "Torture"),
        Pair("Trabalho", "Work"),
        Pair("Tragédia", "Tragedy"),
        Pair("Transgênero", "Transgender"),
        Pair("Travestismo", "Crossdressing"),
        Pair("Trens", "Trains"),
        Pair("Triângulo Amoroso", "Love Triangle"),
        Pair("Troca de Corpos", "Body Swapping"),
        Pair("Troca de Gênero", "Gender Bending"),
        Pair("Tríades", "Triads"),
        Pair("Tsundere", "Tsundere"),
        Pair("Tênis de Mesa", "Table Tennis"),
        Pair("Tênis", "Tennis"),
        Pair("Universo Alternativo", "Alternate Universe"),
        Pair("Urbano", "Urban"),
        Pair("VTuber", "VTuber"),
        Pair("Vampiro", "Vampire"),
        Pair("Viagem", "Travel"),
        Pair("Vida Familiar", "Family Life"),
        Pair("Vikings", "Vikings"),
        Pair("Vilã", "Villainess"),
        Pair("Vingança", "Revenge"),
        Pair("Vôlei", "Volleyball"),
        Pair("Wuxia", "Wuxia"),
        Pair("Yakuza", "Yakuza"),
        Pair("Yandere", "Yandere"),
        Pair("Youkai", "Youkai"),
        Pair("Yuri", "Yuri"),
        Pair("Zumbi", "Zombie"),
        Pair("Ídolo", "Idol"),
        Pair("Ópera Espacial", "Space Opera"),
        Pair("Órfão/Órfã", "Orphan"),
    )

    private val ANY = Pair("Qualquer um", "")

    private val FORMATS = arrayOf(
        ANY,
        Pair("Mangá", "1"),
        Pair("Manhwa", "2"),
        Pair("Manhua", "3"),
        Pair("Novel", "4"),
    )

    private val ADULT_OPTIONS = arrayOf(
        ANY,
        Pair("Sim", "1"),
        Pair("Não", "0"),
    )

    private val CONTENT_FILTER = arrayOf(
        ANY,
        Pair("Mais popular", "0"),
        Pair("Menos popular", "1"),
        Pair("Melhores notas", "2"),
        Pair("Piores notas", "3"),
    )

    private val STATUS = arrayOf(
        ANY,
        Pair("Ativo", "0"),
        Pair("Completo", "1"),
        Pair("Cancelado", "2"),
        Pair("Hiato", "3"),
    )
}
